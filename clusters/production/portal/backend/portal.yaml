apiVersion: apps/v1
kind: Deployment
metadata:
  name: pki-rest-interface
  namespace: portal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pki-rest-interface
  template:
    metadata:
      labels:
        app: pki-rest-interface
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        allowPrivilegeEscalation: false
        runAsNonRoot: true
        readonlyRootFilesystem: true
      serviceAccountName: portal-pki-rest
      containers:
        - args:
            - --audience
            - "https://api.hm.edu"
            - --ssl_service
            - "pki-service:8081"
            - --smime_service
            - "pki-service:8081"
            - --domain_service
            - "domain-rest-interface:8081"
            - --jwks_uri
            - "https://sso.hm.edu/idp/profile/oidc/keyset"
            - --cors_allowed_origins
            - "https://pki.hm.edu"
          env:
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://tempo-distributor.monitoring:14268/api/traces
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: pki-backend
                  key: sentry_dsn
          image: ghcr.io/hm-edu/portal-backend/pki-rest-interface:main-8bd84fd-1732196064 # {"$imagepolicy": "flux-system:pki-rest-interface-policy"}
          imagePullPolicy: Always
          name: app
          ports:
            - containerPort: 8080
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: domain-rest-interface
  namespace: portal
spec:
  replicas: 2
  selector:
    matchLabels:
      app: domain-rest-interface
  template:
    metadata:
      annotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: "5432"
      labels:
        app: domain-rest-interface
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        allowPrivilegeEscalation: false
        runAsNonRoot: true
        readonlyRootFilesystem: true
      serviceAccountName: portal-domain
      containers:
        - args:
            - --audience
            - "https://api.hm.edu"
            - --jwks_uri
            - "https://sso.hm.edu/idp/profile/oidc/keyset"
            - --db
            - "postgresql://pki:pki@postgres.portal.svc.cluster.local/domain"
            - --preseed
            - "/data/data.json"
            - --ssl_service
            - "pki-service:8081"
            - --cors_allowed_origins
            - "https://pki.hm.edu"
          volumeMounts:
            - mountPath: /data
              name: domain-data
          env:
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://tempo-distributor.monitoring:14268/api/traces
            - name: ADMINS
              valueFrom:
                secretKeyRef:
                  name: domain-interface
                  key: admins
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: pki-backend
                  key: sentry_dsn
          image: ghcr.io/hm-edu/portal-backend/domain-rest-interface:main-368af27-1732272987 # {"$imagepolicy": "flux-system:domain-rest-interface-policy"}
          imagePullPolicy: Always
          name: app
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8081
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
      volumes:
        - name: domain-data
          configMap:
            name: domain-data
            items:
              - key: data.json
                path: data.json
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eab-rest-interface
  namespace: portal
spec:
  replicas: 3
  selector:
    matchLabels:
      app: eab-rest-interface
  template:
    metadata:
      annotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: "5432"
      labels:
        app: eab-rest-interface
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        allowPrivilegeEscalation: false
        runAsNonRoot: true
        readonlyRootFilesystem: true
      serviceAccountName: portal-eab
      containers:
        - args:
            - --audience
            - "https://api.hm.edu"
            - --jwks_uri
            - "https://sso.hm.edu/idp/profile/oidc/keyset"
            - --db
            - "postgresql://acme:acme@postgres.portal.svc.cluster.local/eab"
            - --acme_db
            - "postgresql://acme:acme@postgres.portal.svc.cluster.local/acme"
            - --provisioner_id
            - "acme/acme"
            - --domain_service
            - "domain-rest-interface:8081"
            - --cors_allowed_origins
            - "https://pki.hm.edu"
          env:
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://tempo-distributor.monitoring:14268/api/traces
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: pki-backend
                  key: sentry_dsn
          image: ghcr.io/hm-edu/portal-backend/eab-rest-interface:main-8bd84fd-1732196076 # {"$imagepolicy": "flux-system:eab-rest-interface-policy"}
          imagePullPolicy: Always
          name: app
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8081
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pki-service
  namespace: portal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pki-service
  template:
    metadata:
      annotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: "5432"
        prometheus.io/port: "2222"
        prometheus.io/path: "/"
        prometheus.io/scrape: "true"
      labels:
        app: pki-service
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        allowPrivilegeEscalation: false
        runAsNonRoot: true
        readonlyRootFilesystem: true
      serviceAccountName: portal-pki-internal
      containers:
        - args:
            - --sectigo_user
            - "hm-pki-portal"
            - --sectigo_customeruri
            - "DFN"
            - --ssl_org_id
            - "30032"
            - --ssl_term
            - "365"
            - --ssl_profile
            - "15863"
            - --smime_profile
            - "21222"
            - --smime_org_id
            - "30032"
            - --smime_term
            - "730"
            - --smime_student_term
            - "365"
            - --smime_key_length
            - "4096"
            - --smime_key_type
            - "RSA"
            - --db
            - "postgresql://pki:pki@postgres.portal.svc.cluster.local/certificates"
            - --enable_notifications
            - "true"
          env:
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://tempo-distributor.monitoring:14268/api/traces
            - name: SECTIGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sectigo
                  key: sectigo_password
            - name: MAIL_HOST
              valueFrom:
                secretKeyRef:
                  name: mail
                  key: mail_host
            - name: MAIL_BCC
              valueFrom:
                secretKeyRef:
                  name: mail
                  key: mail_bcc
            - name: MAIL_FROM
              valueFrom:
                secretKeyRef:
                  name: mail
                  key: mail_from
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: pki-backend
                  key: sentry_dsn
          image: ghcr.io/hm-edu/portal-backend/pki-service:main-8bd84fd-1732196081 # {"$imagepolicy": "flux-system:pki-service-policy"}
          imagePullPolicy: Always
          name: app
          ports:
            - containerPort: 8081
              protocol: TCP
            - containerPort: 2222
              protocol: TCP
          readinessProbe:
            exec:
              command: ["/grpc_health_probe", "-addr=:8081"]
            initialDelaySeconds: 10
            periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: domain-rest-interface
  name: domain-rest-interface
  namespace: portal
spec:
  selector:
    app: domain-rest-interface
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
    - name: grpc
      port: 8081
      targetPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pki-service
  name: pki-service
  namespace: portal
spec:
  selector:
    app: pki-service
  type: ClusterIP
  ports:
    - name: grpc
      port: 8081
      targetPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: eab-rest-interface
  name: eab-rest-interface
  namespace: portal
spec:
  selector:
    app: eab-rest-interface
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
    - name: grpc
      port: 8081
      targetPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pki-rest-interface
  name: pki-rest-interface
  namespace: portal
spec:
  selector:
    app: pki-rest-interface
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
